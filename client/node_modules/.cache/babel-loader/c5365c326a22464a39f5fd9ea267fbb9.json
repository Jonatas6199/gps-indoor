{"ast":null,"code":"var _jsxFileName = \"C:\\\\GPS-Indoor\\\\gps-indoor\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Table, Button } from 'reactstrap';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      sensors: []\n    };\n\n    var sys = require('sys'),\n        http = require('http');\n\n    http.createServer(function (req, res) {\n      res.writeHead(200, {\n        'Content-Type': 'text/json'\n      });\n      res.write(\"XDDD\");\n    }).listen(3000); // this executes a callout\n    // axios.get('http://localhost:3000/sensor').then(response => {\n    //   this.setState({\n    //     sensors: response.data\n    //   })\n    // });\n  }\n\n  render() {\n    var sensors = this.state.sensors.map(sensor => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: sensor.Id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      }, sensor.Id), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }\n      }, sensor.Name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"success\",\n        size: \"sm\",\n        className: \"mr-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }\n      }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n        color: \"danger\",\n        size: \"sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }, \"Delete\")));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }, \"Id\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    }, \"Name\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, sensors)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/GPS-Indoor/gps-indoor/src/App.js"],"names":["React","Component","axios","Table","Button","App","constructor","state","sensors","sys","require","http","createServer","req","res","writeHead","write","listen","render","map","sensor","Id","Name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,YAA9B;;AAGA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAE1BK,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;;AAIA,QAAIC,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAjB;AAAA,QACIC,IAAI,GAAGD,OAAO,CAAC,MAAD,CADlB;;AAGAC,IAAAA,IAAI,CAACC,YAAL,CAAkB,UAASC,GAAT,EAAcC,GAAd,EAAmB;AACnCA,MAAAA,GAAG,CAACC,SAAJ,CAAc,GAAd,EAAmB;AAAC,wBAAgB;AAAjB,OAAnB;AACAD,MAAAA,GAAG,CAACE,KAAJ,CAAU,MAAV;AACD,KAHD,EAGGC,MAHH,CAGU,IAHV,EATY,CAcZ;AACA;AACA;AACA;AACA;AACA;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAIV,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAAX,CAAmBW,GAAnB,CAAuBC,MAAM,IAAI;AAC7C,0BACE;AAAI,QAAA,GAAG,EAAEA,MAAM,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,MAAM,CAACC,EAAZ,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,MAAM,CAACE,IAAZ,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,IAAI,EAAC,IAA7B;AAAkC,QAAA,SAAS,EAAC,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAuB,QAAA,IAAI,EAAC,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,CAHF,CADF;AAUD,KAXa,CAAd;AAYA,wBACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CADF,CAFF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGd,OADH,CATF,CADF,CADF;AAkBD;;AAzDyB;;AA4D5B,eAAeH,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Table, Button } from 'reactstrap';\n\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      sensors: []\n    }\n\n    var sys = require('sys'),\n        http = require('http');\n      \n    http.createServer(function(req, res) {\n      res.writeHead(200, {'Content-Type': 'text/json'});\n      res.write(\"XDDD\");\n    }).listen(3000);\n\n    // this executes a callout\n    // axios.get('http://localhost:3000/sensor').then(response => {\n    //   this.setState({\n    //     sensors: response.data\n    //   })\n    // });\n\n\n  }\n\n  render() {\n    var sensors = this.state.sensors.map(sensor => {\n      return (\n        <tr key={sensor.Id}>\n          <td>{sensor.Id}</td>\n          <td>{sensor.Name}</td>\n          <td>\n            <Button color=\"success\" size=\"sm\" className=\"mr-2\">Edit</Button>\n            <Button color=\"danger\" size=\"sm\">Delete</Button>\n          </td>\n        </tr>\n      );\n    });\n    return (\n      <div className=\"App container\">\n        <Table>\n\n          <thead>\n            <tr>\n              <th>Id</th>\n              <th>Name</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {sensors}\n          </tbody>\n          \n        </Table>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}